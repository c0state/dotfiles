#----- detect platform
PLATFORM=$(uname)
IS_WSL=$(uname -a | grep microsoft-standard >/dev/null; echo $?)

#----- always use full color terminal
export TERM=xterm-256color

#----- increase history file sizes
export HISTSIZE=10000
export HISTFILESIZE=20000

#----- set preferred editor and mode(s)
export EDITOR=vim
# use vi bindings in shell
#set -o vi

#----- set based on platform (Linux or OS X)
if [[ $PLATFORM == 'Linux' ]]; then
  export PATH=$PATH:/usr/local/heroku/bin
  if [[ "$IS_WSL" == "0" ]]; then
    export DISPLAY=$(grep -m 1 nameserver /etc/resolv.conf | awk '{print $2}'):0.0
  fi
elif [[ $PLATFORM == 'Darwin' ]]; then
  # if homebrew is installed put it's bin dir first
  if [[ -e /usr/local/bin/brew ]]; then
    export PATH=/usr/local/opt/coreutils/libexec/gnubin:/usr/local/bin:/usr/local/sbin:$PATH
    export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
  fi

  # if heroku toolbelt is installed
  if [[ -e /usr/local/heroku/bin ]]; then
    export PATH=/usr/local/heroku/bin:$PATH
  fi

  if [ -n "$BASH_VERSION" ]; then
    if [ -f $(brew --prefix)/share/bash-completion/bash_completion ]; then
      source $(brew --prefix)/share/bash-completion/bash_completion
    fi
  fi

  # use python 3
  if [[ -e /usr/local/opt/python/libexec/bin ]]; then
    export PATH=/usr/local/opt/python/libexec/bin:$PATH
  fi

  # add fastlane to path
  if [[ -e $HOME/.fastlane/bin ]]; then
    export PATH=$HOME/.fastlane/bin:$PATH
  fi

  if [[ -e /usr/local/anaconda3/bin ]]; then
    export PATH=/usr/local/anaconda3/bin:$PATH
  fi
fi 

#----- add android sdk paths
if [[ -e $HOME/Android/sdk ]]; then
  export ANDROID_SDK_ROOT=$HOME/Android/sdk
elif [[ -e $HOME/Library/Android/sdk ]]; then
  export ANDROID_SDK_ROOT=$HOME/Library/Android/sdk
fi

if [[ -n "$ANDROID_SDK_ROOT" ]]; then
  export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools
  export PATH=$PATH:$ANDROID_SDK_ROOT/tools/bin
  export PATH=$PATH:$ANDROID_SDK_ROOT/emulator
fi

#----- add system agnostic apps to path
export PATH=$PATH:$HOME/bin:$HOME/.local/bin

# set up dircolors
eval $(dircolors $HOME/.dotfiles/.dircolors)

#----- php version manager
if [[ -e "${HOME}/.php-version" ]] ; then
  export PHP_VERSIONS="${HOME}/.php-version/versions"
  source $HOME/.php-version/php-version.sh && php-version 5
fi

#----- ruby
if [[ -e "$HOME/.rbenv" ]]; then
  export PATH="$HOME/.rbenv/bin:$PATH"
  eval "$(rbenv init -)"
fi

if which ruby >/dev/null && which gem >/dev/null; then
    PATH="$(ruby -r rubygems -e 'puts Gem.user_dir')/bin:$PATH"
fi

#----- poetry python tool
export PATH="$PATH:$HOME/.poetry/bin"

#----- golang and gvm (go version manager)
export GOPATH="$HOME/work/go"
export PATH=$PATH:"$HOME/work/go/bin"

# TODO: is this still needed?
# go version manager
[[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"

# source git-subrepo
if [[ -e $HOME/.git-subrepo/.rc ]]; then
    source $HOME/.git-subrepo/.rc
fi

#----- set terminal title
if [[ $TERM == xterm* ]] || [[ $TERM == rxvt* ]]
then
  export PROMPT_COMMAND='echo -ne "\033]0;${PWD}\007"'
fi

#----- load aspnet k version manager (kvm)
[ -s "${HOME}/.kre/kvm/kvm.sh" ] && . "${HOME}/.kre/kvm/kvm.sh" # Load kvm

#----- for Amazon AWS EC2 tools
export EC2_HOME=$HOME/Dropbox/Apps/Universal/ec2-api-tools-1.4.2.4
export EC2_PRIVATE_KEY=$HOME/Dropbox/AmazonAWS/X509Key
export EC2_CERT=$HOME/Dropbox/AmazonAWS/X509Cert

source $HOME/.shell_aliases

#----- python/pyenv
if [[ -e "$HOME/.pyenv" ]] ; then
  export PYENV_ROOT=$HOME/.pyenv
  export PATH="$PYENV_ROOT/bin:$PATH"
  if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
  fi
fi

export PATH=$PATH:$(python -m site --user-base)/bin

#----- deno
export PATH=$PATH:$HOME/.deno/bin

#----- docker
export DOCKER_BUILDKIT=1

#----- source any custom shell configuration
[[ -f $HOME/.shellrc_custom ]] && source $HOME/.shellrc_custom

